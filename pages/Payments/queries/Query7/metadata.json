{
  "gitSyncId": "64b92e3951b06c6cdc1f0c88_db67aa2f-eecd-42a1-b23d-20a6d0c8575e",
  "id": "Payments_Query7",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "WITH PaymentData AS (\n    /* Retrieve all payments within the specified date range and status */\n    SELECT \n        \"id\", \n        \"amount\", \n        \"paymentForId\", \n        \"userEmail\", \n        \"createdAt\"\n    FROM \n        \"Payment\" \n    WHERE \n        \"createdAt\" >= {{moment(DatePicker1.selectedDate).format('YYYY-MM-DD')}}::date - INTERVAL '330 minutes'\n        AND \"createdAt\" <= {{moment(DatePicker2.selectedDate).format('YYYY-MM-DD')}}::date + INTERVAL '1110 minutes'\n        AND \"status\" = 'responseReceivedSuccess'\n),\nUnresolvedPayments AS (\n    /* Identify payments with unresolved paymentForId */\n    SELECT \n        p.*\n    FROM \n        PaymentData p\n    LEFT JOIN \n        \"CourseInvitation\" ci \n    ON \n        p.\"userEmail\" = ci.\"email\" \n        AND p.\"amount\" = ci.\"amount\"\n    WHERE \n        p.\"paymentForId\" IS NULL \n        AND ci.\"courseId\" IS NULL\n)\nSELECT \n    * \nFROM \n    UnresolvedPayments;\n",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "learner1",
      "isAutoGenerated": false,
      "name": "learner1",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "executeOnLoad": false,
    "name": "Query7",
    "pageId": "Payments",
    "userSetOnLoad": false
  }
}