{
  "gitSyncId": "64b92e3951b06c6cdc1f0c88_b01a24a4-663f-4a0f-b311-28fcd2131daf",
  "id": "Payments_Stattwise",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "/* \nRetrieve state and city for each user in the Payment table.\nIf userState or userCity is NULL or empty in the Payment table,\nretrieve city and state from the UserProfile table.\n*/\n\nSELECT \n    p.\"userId\", p.\"createdAt\"::date, p.\"id\", p.\"amount\",\n    COALESCE(NULLIF(p.\"userState\", ''), up.\"state\") AS \"state\",\n    COALESCE(NULLIF(p.\"userCity\", ''), up.\"city\") AS \"city\",\nCOALESCE(NULLIF(p.\"userName\", ''), up.\"displayName\") AS \"name\",\nCOALESCE(NULLIF(p.\"userEmail\", ''), up.\"email\") AS \"email\",\nup.\"boardExamYear\", \nup.\"neetExamYear\"\nFROM \n    \"Payment\" p\nLEFT JOIN \n    \"UserProfile\" up\nON \n    p.\"userId\" = up.\"userId\"\nWHERE\n    p.\"createdAt\" >= {{moment(DatePicker1.selectedDate).format(\"YYYY-MM-DD\")}}::date - interval '330 minutes'\n    AND\n    p.\"createdAt\" <= {{moment(DatePicker2.selectedDate).format(\"YYYY-MM-DD\")}}::date + interval '1110 minutes' AND \"status\" = 'responseReceivedSuccess' ORDER BY p.\"createdAt\";",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "learner1",
      "isAutoGenerated": false,
      "name": "learner1",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "executeOnLoad": true,
    "name": "Stattwise",
    "pageId": "Payments",
    "userSetOnLoad": false
  }
}