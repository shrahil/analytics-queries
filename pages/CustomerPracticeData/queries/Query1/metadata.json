{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "Query1",
    "datasource": {
      "name": "learner1",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "learner1",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "CustomerPracticeData",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "/*\nQuery to get the number of days users practiced out of the total available days before May 5, 2024,\nfor all users who made a purchase within a specified date range, sorted by highest to lowest practice days.\nAssumptions:\n1. \"Payment\" table has columns \"userId\", \"status\", and \"createdAt\".\n2. \"DailyUserEvent\" table has columns \"userId\", \"event\", and \"eventDate\".\n3. Date range inputs are provided by DatePicker1 and DatePicker2.\n*/\n\nWITH PurchasedUsers AS (\n    -- Get all users who made a purchase within the specified date range\n    SELECT DISTINCT \"userId\", MIN(\"createdAt\") AS \"firstPurchaseDate\"\n    FROM \"Payment\"\n    WHERE \"status\" = 'responseReceivedSuccess'\n    AND \"createdAt\" >= {{moment(DatePicker1.selectedDate).format(\"YYYY-MM-DD\")}}::date - interval '330 minutes'\n    AND \"createdAt\" <= {{moment(DatePicker2.selectedDate).format(\"YYYY-MM-DD\")}}::date + interval '1110 minutes'\n    GROUP BY \"userId\"\n),\nPracticedDays AS (\n    -- Get the number of days each user practiced before May 5, 2024\n    SELECT \n        \"userId\", \n        COUNT(DISTINCT \"eventDate\") AS \"practicedDays\"\n    FROM \n        \"DailyUserEvent\"\n    WHERE \n        \"event\" = 'Question'\n    AND \n        \"eventDate\" < '2024-05-05'\n    GROUP BY \n        \"userId\"\n),\nTotalDaysPerUser AS (\n    -- Calculate the total number of available days from the date of first purchase to May 5, 2024 for each user\n    SELECT \n        PU.\"userId\",\n        COUNT(*) AS \"totalDays\"\n    FROM \n        PurchasedUsers PU,\n        generate_series(PU.\"firstPurchaseDate\"::date, '2024-05-04'::date, '1 day') AS available_dates\n    GROUP BY \n        PU.\"userId\"\n)\n-- Combine the results to get the final output\nSELECT\n    PU.\"userId\",\n    COALESCE(PD.\"practicedDays\", 0) AS \"practicedDays\",\n    TDPU.\"totalDays\"\nFROM\n    PurchasedUsers PU\nLEFT JOIN\n    PracticedDays PD ON PU.\"userId\" = PD.\"userId\"\nJOIN\n    TotalDaysPerUser TDPU ON PU.\"userId\" = TDPU.\"userId\"\nORDER BY\n    \"practicedDays\" DESC;\n",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ]
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "moment(DatePicker1.selectedDate).format(\"YYYY-MM-DD\")",
      "moment(DatePicker2.selectedDate).format(\"YYYY-MM-DD\")"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2024-06-20T06:09:43Z"
  },
  "id": "CustomerPracticeData_Query1",
  "deleted": false,
  "gitSyncId": "64b92e3951b06c6cdc1f0c88_00990007-bd8d-4b31-b068-985ace40475c"
}